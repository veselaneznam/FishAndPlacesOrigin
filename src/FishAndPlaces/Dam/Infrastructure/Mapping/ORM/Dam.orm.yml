FishAndPlaces\Dam\Domain\Model\Dam:
    repositoryClass: FishAndPlaces\Dam\Infrastructure\Repository\Doctrine\ORM\DoctrineDamRepository
    type: entity
    table: dam
    id:
        id:
            type: integer
            generator: { strategy: AUTO }

    fields:
        createdAt:
            type: datetime
            column: created_at
        updatedAt:
            type: datetime
            nullable: true
            column: updated_at
        name:
            type: string
            length: '255'
        location:
            type: string
            length: '255'
        rating:
            type: float
        isActive:
            type: boolean
            column: is_active
        priceProPerson:
            type: float
            column: price_pro_person
        latitude:
            type: float
        longitude:
            type: float
        showOnFirstPage:
            type: boolean
        description:
            type: text

    oneToMany:
        imageCollection:
            targetEntity: FishAndPlaces\Dam\Domain\Model\DamImage
            mappedBy: dam

    manyToMany:
        fishCollection:
            targetEntity: FishAndPlaces\Dam\Domain\Model\Fish
            cascade: {  }
            fetch: LAZY
            mappedBy: null
            inversedBy: null
            joinTable:
                name: dam_fish
                joinColumns:
                    -
                        referencedColumnName: id
                        name: dam_id
                inverseJoinColumns:
                    -
                        referencedColumnName: id
                        name: fish_id
            orderBy: null
    lifecycleCallbacks: {  }
