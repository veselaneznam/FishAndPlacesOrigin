<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevDebugProjectContainerUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_open_file' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cabin_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\GoGreenBundle\\Controller\\CabinController::cabinDetailView',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/cabin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'camp_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\GoGreenBundle\\Controller\\CampController::campDetailView',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/camp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'dam_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\GoGreenBundle\\Controller\\DamController::damDetailView',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/dam',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fish_view' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\GoGreenBundle\\Controller\\FishController::detailViewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/fish/{$id}',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'green_object' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\GoGreenBundle\\Controller\\GreenObjectController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'post_map_view' => array (  0 =>   array (    0 => 'location',    1 => 'radius',    2 => 'page',  ),  1 =>   array (    'page' => 1,    'location' => 'sofia',    'radius' => 100,    '_controller' => 'FishAndPlaces\\UI\\Bundle\\GoGreenBundle\\Controller\\GreenObjectController::postMapAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]+',      3 => 'radius',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'location',    ),    3 =>     array (      0 => 'text',      1 => '/map',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_searchNearBy' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\GoGreenBundle\\Controller\\GreenObjectController::searchNearBy',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/searchNearBy',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'green_object_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\GoGreenBundle\\Controller\\GreenObjectController::greenObjectDetailView',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/green_object',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'green_object_map_direction' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\GoGreenBundle\\Controller\\GreenObjectController::loadMapDirections',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/green_object/map_direction',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'page_view' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\GoGreenBundle\\Controller\\PageController::detailViewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/page/{$slug}',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'village_holiday_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\GoGreenBundle\\Controller\\VillageHolidayController::villageHolidayDetailView',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/village_holiday',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'cabin_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\CabinController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cabin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'create_cabin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\CabinController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/cabin/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit_cabin' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\CabinController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/cabin/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deactivate_cabin' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\CabinController::deactivateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/deactivate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'activate_cabin' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\CabinController::activateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/activate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'camp_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\CampController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/camp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'create_camp' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\CampController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/camp/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit_camp' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\CampController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/camp/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deactivate_camp' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\CampController::deactivateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/deactivate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'activate_camp' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\CampController::activateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/activate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'page_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\CmsPageController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'create_cms_page' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\CmsPageController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/page/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit_page' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\CmsPageController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/page/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'dam_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\DamController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/dam',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'create_dam' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\DamController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/dam/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit_dam' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\DamController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/dam/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deactivate_dam' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\DamController::deactivateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/deactivate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'activate_dam' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\DamController::activateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/activate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fish_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\FishController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/fish',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'create_fish' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\FishController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/fish/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit_fish' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\FishController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/fish/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'green_object_images_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\GreenObjectImageController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/green_object/images/{$id}',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'green_object_images_upload' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\GreenObjectImageController::uploadImagesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/green_object/upload/images/{$id}',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'green_object_images_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\GreenObjectImageController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/green_object/images/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\IndexController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'village_holiday_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\VillageHolidayController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/villageHoliday',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'create_villageHoliday' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\VillageHolidayController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/village_holiday/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit_village_holiday' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\VillageHolidayController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/villageHoliday/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deactivate_village_holiday' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\VillageHolidayController::deactivateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/deactivate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'activate_village_holiday' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FishAndPlaces\\UI\\Bundle\\AdminBundle\\Controller\\VillageHolidayController::activateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/activate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'logout' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
